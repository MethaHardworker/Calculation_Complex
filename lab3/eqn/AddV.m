function [V,cfinite]=AddV(V,cfinite,A,b,m,cnmty)
%
% Функция AddV вносит в список V вершины множества решений H
% системы линейных неравенств  A x >= b, где
%   A - вещественная матрица размера m на 3 (m>=1) без нулевых строк,
%   b - вещественный вектор,
%   x - вещественный вектор неизвестных.
% Известно заранее, что H лежит в одном ортанте.
%
% автор: Шарая Ирина Александровна (Институт вычислительных технологий, Новосибирск)
% дата:  15/09/2012

   if ~cnmty % в ортанте нет точек множества H
      return;
   end

   for i=1:m
      
      % перейдем из исходной системы координат (0,x1,x2,x3) 
      % в систему внутренних координат (pr,y1,y2) 
      % плоскости i (точнее плоскости A(i,:)x=b(i))
      [pr,At,bt,y1,y2]=ChangeVariable(A,b,i);

      % удалим нулевые строки из At 
      % (их могут дать плоскости, параллельные i) 
      [At,bt,cnmtyt]=ClearZeroRows(At,bt);

      if ~cnmtyt
         continue; % плоскость i не пересекает множество H
      end

      % найдем матрицу St граничных интервалов
      [St]=BoundaryIntervals(At,bt);

      if size(St,1)==0 % 
         continue; % плоскость i не пересекает множество H
      end

      % cоберем вершины из плоскости i в матрицу Vt

        Vt=St(:,1:2); % матрица из начал граничных интервалов

        xbf=isfinite(Vt(:,1));
        ybf=isfinite(Vt(:,2));
        binf=~min(xbf,ybf); % неравенства St(binf,5) дают
                            % граничные интервалы с началом в бесконечности

        if max(binf)
           cfinite=0;
        end

        Vt(binf,:)=[]; 

      % записав матрицу Vt в исходных координатах, получим матрицу Vtt 
      Vtt=zeros(0,3); 
      for k=1:size(Vt,1)
          Vtt=[Vtt ; pr+y1*Vt(k,1)+y2*Vt(k,2) ];
      end

      V=[V;Vtt];

   end

end